import os
import img2pdf
from PIL import Image
import subprocess

# üìÇ Rutassssss
CARPETA_ENTRADA = r"E:\imagenes"
CARPETA_SALIDA_PDF = r"E:\imagenes_convertidas_pdf"
CARPETA_SALIDA_PDFA = r"E:\imagenes_convertidas_pdfa"

# üìå Asegurar que las carpetas de salida existen
os.makedirs(CARPETA_SALIDA_PDF, exist_ok=True)
os.makedirs(CARPETA_SALIDA_PDFA, exist_ok=True)

# üîç Buscar archivos .tif en la carpeta de entrada
archivos = [f for f in os.listdir(CARPETA_ENTRADA) if f.lower().endswith(".tif")]

# Parte 1: Convertir TIFF a PDF normal
for archivo in archivos:
    ruta_tif = os.path.join(CARPETA_ENTRADA, archivo)
    ruta_pdf = os.path.join(CARPETA_SALIDA_PDF, archivo.replace(".tif", ".pdf"))

    try:
        with Image.open(ruta_tif) as img:
            img = img.convert("RGB")  # Convertir a RGB para compatibilidad
            width, height = img.size

            # üìå Convertir los valores de DPI a enteros
            dpi_x, dpi_y = map(int, img.info['dpi'])

            # üìå Calcular el tama√±o de la p√°gina en puntos basado en las dimensiones de la imagen
            page_width = width * 300 / dpi_x
            page_height = height * 300 / dpi_y

            # üìå Convertir la imagen TIFF a PDF con 300 DPI usando img2pdf
            pdf_bytes = img2pdf.convert(
                ruta_tif,
                layout_fun=img2pdf.get_layout_fun((page_width, page_height)),
                dpi=300
            )
            with open(ruta_pdf, "wb") as f:
                f.write(pdf_bytes)

        print(f"‚úÖ PDF de alta calidad (300 DPI) creado: {ruta_pdf}")

    except Exception as e:
        print(f"‚ùå Error con {archivo}: {e}")

print("üéâ Conversi√≥n de TIFF a PDF con 300 DPI completada.")

# Parte 2: Convertir PDF a PDF/A
archivos_pdf = [f for f in os.listdir(CARPETA_SALIDA_PDF) if f.lower().endswith(".pdf")]

for archivo_pdf in archivos_pdf:
    ruta_pdf = os.path.join(CARPETA_SALIDA_PDF, archivo_pdf)
    ruta_pdfa = os.path.join(CARPETA_SALIDA_PDFA, archivo_pdf)

    try:
        # üìå Convertir el PDF a PDF/A usando Ghostscript y agregar OutputIntent
        gs_command = [
            "gswin64c",  # Comando para Ghostscript en Windows
            "-dPDFA",
            "-dBATCH",
            "-dNOPAUSE",
            "-dNOOUTERSAVE",
            "-sProcessColorModel=DeviceRGB",
            "-sDEVICE=pdfwrite",
            "-dPDFACompatibilityPolicy=1",
            "-sOutputFile=" + ruta_pdfa,
            "-sOutputICCProfile=srgb.icc",  # Ruta al perfil ICC de sRGB
            ruta_pdf
        ]
        subprocess.run(gs_command, check=True)

        # üìå Eliminar el archivo PDF normal despu√©s de la conversi√≥n a PDF/A
        os.remove(ruta_pdf)

        print(f"‚úÖ PDF/A de alta calidad (300 DPI, versi√≥n PDF/A) creado: {ruta_pdfa}")

    except Exception as e:
        print(f"‚ùå Error con {archivo_pdf}: {e}")

print("üéâ Conversi√≥n de PDF a PDF/A con 300 DPI completada.")